// Simple Calculator Example
// Demonstrates basic math operations and functions

f add(left:i, right:i):i {
    r left + right;
}

f multiply(base:i, factor:i):i {
    r base * factor;
}

f calculate_area(width:f, height:f):f {
    r width * height;
}

// Basic calculations
number_one:i = 10;
number_two:i = 5;

sum:i = add(number_one, number_two);
product:i = multiply(number_one, number_two);
difference:i = number_one - number_two;
quotient:i = number_one / number_two;

print(number_one, ` + `, number_two, ` = `, sum);
print(number_one, ` * `, number_two, ` = `, product);
print(number_one, ` - `, number_two, ` = `, difference);
print(number_one, ` / `, number_two, ` = `, quotient);

// Math library functions
square_root:f = math_sqrt(16.0);
power:f = math_pow(2.0, 3.0);
rounded:f = math_round(3.7);

print(`Square root of 16: `, square_root);
print(`2 to the power of 3: `, power);
print(`3.7 rounded: `, rounded);

// Area calculation
room_area:f = calculate_area(12.5, 8.0);
print(`Room area (12.5 x 8.0): `, room_area, ` square feet`);

// Batch calculations using collection operations
numbers:a:i = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// Square all numbers
squares:a:i = map num in numbers {
    y num * num;
};

// Find even squares
even_squares:a:i = filter square in squares {
    y square % 2 == 0;
};

// Sum all squares
total_squares:i = reduce acc square in squares from 0 {
    y acc + square;
};

// Check if all numbers are positive
all_positive:b = all num in numbers {
    y num > 0;
};

// Find first number greater than 5
first_big:i = danger(find num in numbers {
    y num > 5;
});

print(`\n=== Batch Calculations ===`);
print(`Original numbers: `, numbers);
print(`Squares: `, squares);
print(`Even squares: `, even_squares);
print(`Sum of squares: `, total_squares);
print(`All positive: `, all_positive);
print(`First number > 5: `, first_big);