// Adventure Game
// Interactive text adventure demonstrating Nail features with structs

// Define game struct
struct Player {
    name:s,
    health:i,
    gold:i
}

// Game constants
max_health:i = 100;
initial_gold:i = 10;

// Get player name
print(`Welcome to the Adventure Game!`);
print(`================================\n`);
player_name:s = danger(io_read_line_prompt(`Enter your character name: `));

// Initialize player with struct instantiation
player:Player = Player {
    name = player_name,
    health = max_health,
    gold = initial_gold
};

// Display initial stats using field access
print(`\nWelcome, `, player.name, `!`);
print(`Starting Health: `, player.health);
print(`Starting Gold: `, player.gold);
print(`\nYour adventure begins...\n`);

// Turn 1
print(`=== Turn 1 ===`);
print(`You encounter a goblin!`);
choice1:s = danger(io_read_line_prompt(`Fight (f) or run (r)? `));

health_after_fight:i = if {
    string_contains(choice1, `f`) => {
        print(`You defeat the goblin and earn 20 gold!`);
        print(`But you take 10 damage.`);
        player.health - 10;
    },
    else => {
        print(`You run away safely.`);
        player.health;
    }
};

gold_after_fight:i = if {
    string_contains(choice1, `f`) => { player.gold + 20; },
    else => { player.gold; }
};

current_name:s = player.name;

player_turn1:Player = Player {
    name = current_name,
    health = health_after_fight,
    gold = gold_after_fight
};

print(`Health: `, player_turn1.health, ` Gold: `, player_turn1.gold);

// Turn 2
print(`\n=== Turn 2 ===`);
print(`You find a treasure chest with 30 gold!`);
name_turn2:s = player_turn1.name;
health_turn2:i = player_turn1.health;
gold_turn2:i = player_turn1.gold + 30;

player_turn2:Player = Player {
    name = name_turn2,
    health = health_turn2,
    gold = gold_turn2
};
print(`You now have `, player_turn2.gold, ` gold!`);

// Turn 3
print(`\n=== Turn 3 ===`);
print(`A merchant offers to heal you for 20 gold.`);
choice3:s = danger(io_read_line_prompt(`Accept (y) or decline (n)? `));

can_afford:b = player_turn2.gold >= 20;

final_health:i = if {
    string_contains(choice3, `y`) => {
        if {
            can_afford => {
                print(`You are fully healed!`);
                max_health;
            },
            else => {
                print(`Not enough gold!`);
                player_turn2.health;
            }
        };
    },
    else => {
        print(`You decline the offer.`);
        player_turn2.health;
    }
};

final_gold:i = if {
    string_contains(choice3, `y`) => {
        if {
            can_afford => { player_turn2.gold - 20; },
            else => { player_turn2.gold; }
        };
    },
    else => { player_turn2.gold; }
};

final_name:s = player_turn2.name;

player_final:Player = Player {
    name = final_name,
    health = final_health,
    gold = final_gold
};

print(`Health: `, player_final.health, ` Gold: `, player_final.gold);

// Game Over
print(`\n=== Game Over ===`);
print(`Thanks for playing, `, player_final.name, `!`);
print(`Final stats:`);
print(`- Survived 3 turns`);
print(`- Final health: `, player_final.health, `/`, max_health);
print(`- Final gold: `, player_final.gold, ` coins`);
print(`\nRun the game again for a different adventure!`);