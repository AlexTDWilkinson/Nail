// Simple Adventure Game
// Uses reduce_int for game loop with packed state

// Game constants
max_health:i = 100;
max_turns:i = 20;

// Get player name
print(`Welcome to the Adventure Game!`);
print(`================================\n`);
player_name:s = dangerous(io_read_line_prompt(`Enter your character name: `));

// Initial values
health:i = max_health;
gold:i = 10;
monsters:i = 0;

print(`\nStarting game with:`);
print(string_concat([`Health: `, string_from(health)]));
print(string_concat([`Gold: `, string_from(gold)]));
print(`\nGood luck!\n`);

// Game loop using each_int
turns:a:i = range(1, max_turns);

each_int(turns, |turn:i|:v {
    // Display turn
    print(string_concat([`\n========== TURN `, string_from(turn), ` ==========`]));
    print(string_concat([`Health: `, string_from(health), `/`, string_from(max_health)]));
    print(string_concat([`Gold: `, string_from(gold), ` coins`]));
    print(string_concat([`Monsters Defeated: `, string_from(monsters)]));
    
    // Check if dead
    if {
        health <= 0 => {
            print(`\nüíÄ GAME OVER! You have been defeated!`);
            print(string_concat([`Final Score: `, string_from(monsters), ` monsters defeated`]));
            process_exit(0);
        },
        else => { }
    }
    
    // Game menu
    print(`\nWhat would you like to do?`);
    print(`1. Fight a monster`);
    print(`2. Rest (costs 5 gold)`);
    print(`3. Quit game`);
    
    choice:s = dangerous(io_read_line_prompt(`Your choice (1-3): `));
    
    // Process choice
    if {
        string_contains(choice, `1`) => {
            print(`\n‚öîÔ∏è  You engage in battle!`);
            damage:i = 15;
            reward:i = 25;
            
            health = health - damage;
            gold = gold + reward;
            monsters = monsters + 1;
            
            print(string_concat([`You defeated a goblin! (+`, string_from(reward), ` gold)`]));
            print(string_concat([`You took `, string_from(damage), ` damage!`]));
        },
        string_contains(choice, `2`) => {
            print(`\nüè® You rest at the inn...`);
            
            if {
                gold < 5 => {
                    print(`Not enough gold! Rest costs 5 gold.`);
                },
                else => {
                    print(`Health restored! (-5 gold)`);
                    health = max_health;
                    gold = gold - 5;
                }
            }
        },
        string_contains(choice, `3`) => {
            print(`\nThanks for playing!`);
            print(string_concat([`Final Score: `, string_from(monsters), ` monsters defeated`]));
            process_exit(0);
        },
        else => {
            print(`\nInvalid choice! Try again.`);
        }
    }
});

// Game ended naturally
print(`\n===== GAME OVER =====`);
print(string_concat([`You survived `, string_from(max_turns), ` turns!`]));
print(string_concat([`Thank you for playing, `, player_name, `!`]));
print(string_concat([`Final Score: `, string_from(monsters), ` monsters defeated`]));
print(string_concat([`Gold Collected: `, string_from(gold)]));