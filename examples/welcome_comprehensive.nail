// Welcome to NAIL - A Simple, Safe Programming Language!
// Press F7 to compile & run, F6 to toggle theme, Ctrl+C to exit
// Note: Use backticks for strings: `like this`

// === Basic Types ===
name:s = `Alice`;
age:i = 25;
score:f = 95.7;
is_active:b = true;

// === Structs - Custom Data Types ===
struct Player {
    name:s,
    health:i,
    level:i,
    experience:f
}

// Create a player instance
player:Player = Player {
    name: `Hero`,
    health: 100,
    level: 1,
    experience: 0.0
};

// === Enums - Choice Types ===
enum GameState {
    MainMenu,
    Playing,
    Paused,
    GameOver
}

current_state:GameState = GameState::Playing;

// === Error Handling - Safe by Default ===
fn divide(num:i, den:i):i!e {
    if {
        den == 0 => { r e(`Cannot divide by zero!`); },
        else => { r num / den; }
    }
}

// Handle errors gracefully with safe()
result:i = safe(divide(10, 2), |err:s|:i {
    print(string_concat([`Error: `, err]));
    r 0;  // Default value
});
print(string_concat([`10 / 2 = `, string_from(result)]));

// Or panic on errors with dangerous()
// result2:i = dangerous(divide(10, 0)); // This would panic!

// === Functions ===
fn greet(person_name:s):s {
    r string_concat([`Hello, `, person_name, `!`]);
}

greeting:s = greet(name);
print(greeting);

// === Arrays ===
numbers:a:i = [1, 2, 3, 4, 5];
names:a:s = [`Alice`, `Bob`, `Charlie`];
scores:a:f = [95.5, 87.3, 92.0];

// === Control Flow ===
if {
    current_state == GameState::Playing => {
        print(`Game is running!`);
    },
    current_state == GameState::Paused => {
        print(`Game is paused`);
    },
    else => {
        print(`Game is not active`);
    }
}

// === Parallel Processing - Nail's Superpower! ===
parallel {
    task1:s = greet(`World`);
    task2:i = time_now();
    task3:f = math_sqrt(16.0);
    print(`Running tasks in parallel!`);
}

// === String Operations ===
player_info:s = `Player created successfully!`;
print(player_info);

// === Time & Math Functions ===
current_time:i = time_now();
square_root:f = math_sqrt(25.0);
random_num:f = math_random();

print(`Welcome to Nail - where simplicity meets power!`);