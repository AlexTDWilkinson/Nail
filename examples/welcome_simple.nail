// Welcome to NAIL! Press F7 to run, F6 for theme, Ctrl+C to exit
// Use backticks for strings: `like this`

// === Variables & Types ===
greeting:s = `Hello, Nail!`;
count:i = 42;
pi:f = 3.14159;
is_ready:b = true;

print(greeting);

// === Structs ===
struct Point {
    x:i,
    y:i
}

origin:Point = Point { x: 0, y: 0 };

// === Enums ===  
enum Status {
    Active,
    Inactive,
    Pending
}

status:Status = Status::Active;

// === Error Handling (NEW!) ===
fn safe_divide(num:i, den:i):i!e {
    if {
        den == 0 => { r e(`Division by zero!`); },
        else => { r num / den; }
    }
}

// Handle errors gracefully
result:i = safe(safe_divide(10, 2), |err:s|:i {
    print(string_concat([`Error occurred: `, err]));
    r -1;
});
print(string_concat([`10 / 2 = `,from(result)]));

// === Functions ===
fn add(first:i, second:i):i {
    r first + second;
}

total:i = add(5, 3);
print(string_concat([`5 + 3 = `,from(total)]));

// === Control Flow ===
if {
    status == Status::Active => { 
        print(`System is active`); 
    },
    else => { 
        print(`System is not active`); 
    }
}

// === Parallel Execution ===
parallel {
    print(`Task 1 running...`);
    print(`Task 2 running...`);
    print(`Task 3 running...`);
}

print(`Welcome to Nail!`);