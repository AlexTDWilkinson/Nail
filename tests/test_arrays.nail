// Array Tests - Comprehensive

// Test array length
arr:a:i = [1, 2, 3];
len:i = array_len(arr);
print(`Array length:`);
print(len);

// Test array_concat with integers
arr1:a:i = [1, 2, 3];
arr2:a:i = [4, 5, 6];
combined:a:i = array_concat(arr1, arr2);
print(`Concatenated:`);
print(combined);

// Test array_concat with empty arrays
empty:a:i = [];
numbers:a:i = [7, 8, 9];
result1:a:i = array_concat(empty, numbers);
result2:a:i = array_concat(numbers, empty);
print(`Empty + numbers:`);
print(result1);
print(`Numbers + empty:`);
print(result2);

// Test array operations
sorted:a:i = array_sort([3, 1, 4, 1, 5]);
reversed:a:i = array_reverse([1, 2, 3, 4, 5]);
print(`Sorted:`);
print(sorted);
print(`Reversed:`);
print(reversed);

// Test array_push
list:a:i = [1, 2, 3];
list_with_4:a:i = array_push(list, 4);
print(`After push:`);
print(list_with_4);

// Test array slicing
big_array:a:i = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
slice1:a:i = danger(array_slice(big_array, 2, 5));
slice2:a:i = danger(array_slice(big_array, 5, 10));
print(`Slice [2:5]:`);
print(slice1);
print(`Slice [5:10]:`);
print(slice2);

// Test array_contains
has_three:b = array_contains([1, 2, 3, 4, 5], 3);
has_ten:b = array_contains([1, 2, 3, 4, 5], 10);
print(`Contains 3:`);
print(has_three);
print(`Contains 10:`);
print(has_ten);

// Test with strings
strings:a:s = [`hello`, `world`, `test`];
joined:s = array_join(strings, ` `);
print(`Joined strings:`);
print(joined);

print(`Array tests completed`);