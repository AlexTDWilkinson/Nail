// Test struct instantiation inside reduce blocks

struct Point {
    x_coord:i,
    y_coord:i
}

// Test data
points:a:Point = [
    Point { x_coord: 1, y_coord: 2 },
    Point { x_coord: 3, y_coord: 4 },
    Point { x_coord: 5, y_coord: 6 }
];

// Test struct instantiation in reduce - single line
result1:Point = reduce acc point in points from Point { x_coord: 0, y_coord: 0 } {
    // First compute the values
    new_x:i = acc.x_coord + point.x_coord;
    new_y:i = acc.y_coord + point.y_coord;
    // Then use them in struct instantiation
    new_point:Point = Point { x_coord: new_x, y_coord: new_y };
    y new_point;
};

print(array_join([`Result1: x=`, danger(string_from(result1.x_coord)), `, y=`, danger(string_from(result1.y_coord))], ``));

// Test struct instantiation in reduce - multi-line
result2:Point = reduce acc point in points from Point { x_coord: 0, y_coord: 0 } {
    // First compute the values
    new_x:i = acc.x_coord + point.x_coord;
    new_y:i = acc.y_coord + point.y_coord;
    // Then use multi-line struct instantiation
    new_point:Point = Point { 
        x_coord: new_x, 
        y_coord: new_y 
    };
    y new_point;
};

print(array_join([`Result2: x=`, danger(string_from(result2.x_coord)), `, y=`, danger(string_from(result2.y_coord))], ``));