// Test error handling in Nail

// Function that can return an error
function divide(a:i, b:i):i!e {
    if {
        b == 0 => { r e(`Division by zero`); }
        else => { r a / b; }
    }
}

// Test danger() - should propagate error up
function test_dangerous():i {
    result:i = danger(divide(10, 0));
    r result;
}

// Test safe() - should handle error gracefully
function handle_error(err:s):i {
    print(`Error occurred: ` + err);
    r -1;
}

function test_safe():i {
    result:i = safe(divide(10, 0), handle_error);
    r result;
}

// Main test
function main():v {
    // This should panic
    dangerous_result:i = test_dangerous();
    
    // This should return -1
    safe_result:i = test_safe();
    
    print(array_join([`Safe result: `, danger(string_from(safe_result))], ``));
}