// Comprehensive test of all stdlib functions

// Math functions
x_value:f = 16.0;
sqrt_val:f = math_sqrt(x_value);
abs_val:f = math_abs(-5.7);  
power:f = math_pow(2.0, 3.0);
rounded:f = math_round(3.7);
floored:f = math_floor(3.7);
ceiled:f = math_ceil(3.2);
min_val:f = math_min(5.0, 3.0);
max_val:f = math_max(5.0, 3.0);
random_val:f = math_random();

// String functions  
greeting:s = `Hello, World!`;
upper:s = string_to_uppercase(greeting);
lower:s = string_to_lowercase(upper);
trimmed:s = string_trim(`  spaces  `);
replaced:s = string_replace(greeting, `World`, `Nail`);
str_len:i = string_len(greeting);
contains_result:b = string_contains(greeting, `Hello`);

// Array functions
numbers:a:i = [1, 2, 3, 4, 5];
arr_len:i = array_len(numbers);
sorted:a:i = array_sort(numbers);
reversed:a:i = array_reverse(sorted);
strings:a:s = [`hello`, `world`];
joined:s = array_join(strings, ` `);

// Type conversions
num_str:s = `42`;
converted_num:i = int_from(num_str);
float_str:s = `3.14`;
converted_float:f = to_float(float_str);

// Time functions
now_time:i = time_now();
formatted_time:s = time_format(now_time, `%Y-%m-%d`);

// Path functions
joined_path:s = path_join(`/home`, `user`);
path_exists_check:b = path_exists(joined_path);

// Environment
args:a:s = env_args();
args_count:i = array_len(args);

// Create summary
results:a:s = [
    `Math: sqrt(16) = `,from(sqrt_val),
    `, abs(-5.7) = `,from(abs_val),
    `, pow(2,3) = `,from(power),
    `\nString: upper = `, upper,
    `, length = `,from(str_len),
    `\nArray: length = `,from(arr_len),
    `, joined = `, joined,
    `\nTime: `, formatted_time,
    `\nPath: `, joined_path,
    `\nArgs: `,from(args_count)
];

output:s = string_concat(results);

print(output);